import matplotlib.pyplot as plt
import numpy as np


def font_to_binary_patterns():
    patterns = []
    for symbol in Font3:
        binary_pattern = []
        for row in symbol:
            row_bits = [(row >> (4 - bit)) & 1 for bit in range(5)]
            binary_pattern.extend(row_bits)
        patterns.append(binary_pattern)
    return patterns


def plot_letter(data, index):
    letter = np.array(data[index]).reshape(7, 5)
    plt.imshow(letter, cmap="binary")
    plt.axis("off")
    plt.show()


def plot_all_letters(data):
    n_letters = len(data)
    n_cols = 8
    n_rows = (n_letters + n_cols - 1) // n_cols

    plt.figure(figsize=(15, 2 * n_rows))
    for i in range(n_letters):
        plt.subplot(n_rows, n_cols, i + 1)
        letter = np.array(data[i]).reshape(7, 5)
        plt.imshow(letter, cmap="binary")
        plt.axis("off")

    plt.tight_layout()
    plt.show()


def plot_latent_space(latent_representations, font_data):
    plt.figure(figsize=(10, 8))
    for i, (x, y) in enumerate(latent_representations):
        if i == 31:  # DEL character
            char = "DEL"
        else:
            char = chr(0x60 + i)
        plt.scatter(x, y, s=100)
        plt.annotate(char, (x, y), xytext=(5, 5), textcoords="offset points")

    plt.title("Distribuci√≥n de caracteres en el espacio latente")
    plt.xlabel("Dimensionalidad Latente 1")
    plt.ylabel("Dimensionalidad Latente 2")
    plt.grid(True)
    plt.tight_layout()
    plt.show()


Font3 = [
    [0x04, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00],
    [0x0e, 0x01, 0x0d, 0x13, 0x13, 0x0d, 0x00],
    [0x10, 0x10, 0x10, 0x1c, 0x12, 0x12, 0x1c],
    [0x00, 0x00, 0x00, 0x0e, 0x10, 0x10, 0x0e],
    [0x01, 0x01, 0x01, 0x07, 0x09, 0x09, 0x07],
    [0x00, 0x00, 0x0e, 0x11, 0x1f, 0x10, 0x0f],
    [0x06, 0x09, 0x08, 0x1c, 0x08, 0x08, 0x08],
    [0x0e, 0x11, 0x13, 0x0d, 0x01, 0x01, 0x0e],
    [0x10, 0x10, 0x10, 0x16, 0x19, 0x11, 0x11],
    [0x00, 0x04, 0x00, 0x0c, 0x04, 0x04, 0x0e],
    [0x02, 0x00, 0x06, 0x02, 0x02, 0x12, 0x0c],
    [0x10, 0x10, 0x12, 0x14, 0x18, 0x14, 0x12],
    [0x0c, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04],
    [0x00, 0x00, 0x0a, 0x15, 0x15, 0x11, 0x11],
    [0x00, 0x00, 0x16, 0x19, 0x11, 0x11, 0x11],
    [0x00, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e],
    [0x00, 0x1c, 0x12, 0x12, 0x1c, 0x10, 0x10],
    [0x00, 0x07, 0x09, 0x09, 0x07, 0x01, 0x01],
    [0x00, 0x00, 0x16, 0x19, 0x10, 0x10, 0x10],
    [0x00, 0x00, 0x0f, 0x10, 0x0e, 0x01, 0x1e],
    [0x08, 0x08, 0x1c, 0x08, 0x08, 0x09, 0x06],
    [0x00, 0x00, 0x11, 0x11, 0x11, 0x13, 0x0d],
    [0x00, 0x00, 0x11, 0x11, 0x11, 0x0a, 0x04],
    [0x00, 0x00, 0x11, 0x11, 0x15, 0x15, 0x0a],
    [0x00, 0x00, 0x11, 0x0a, 0x04, 0x0a, 0x11],
    [0x00, 0x11, 0x11, 0x0f, 0x01, 0x11, 0x0e],
    [0x00, 0x00, 0x1f, 0x02, 0x04, 0x08, 0x1f],
    [0x06, 0x08, 0x08, 0x10, 0x08, 0x08, 0x06],
    [0x04, 0x04, 0x04, 0x00, 0x04, 0x04, 0x04],
    [0x0c, 0x02, 0x02, 0x01, 0x02, 0x02, 0x0c],
    [0x08, 0x15, 0x02, 0x00, 0x00, 0x00, 0x00],
    [0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f]
]

if __name__ == "__main__":
    # Convertir Font3 a patrones binarios
    binary_patterns = font_to_binary_patterns()
    plot_all_letters(binary_patterns)